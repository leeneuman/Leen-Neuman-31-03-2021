{"version":3,"sources":["components/NavBar.js","store/actions/index.js","api/WeatherAPI.js","components/SearchBar.js","helpers/dataHelpers.js","components/CityData.js","components/Forcast.js","components/Forcasts.js","components/City.js","pages/Home.js","components/FavoriteData.js","pages/Favorites.js","components/Routes.js","App.js","reportWebVitals.js","store/reducers/favorites.js","store/reducers/selectedCity.js","store/reducers/index.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeStyle","fontWeight","updateCity","city","payload","BASE_URL","API_KEY","getSuggestions","searchText","axios","get","headers","Accept","getCurrentWeather","SearchBar","dispatch","useDispatch","useState","setSearchText","hintData","setHintData","getData","a","useEffect","length","test","then","res","data","catch","err","console","log","value","onChange","event","target","placeholder","title","style","zIndex","map","cursor","onClick","handleSelectCity","LocalizedName","Key","addToLocalStorage","key","window","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","CityData","favorites","useSelector","state","currentWeather","setCurrentWeather","cityKey","isFavorite","filter","f","alert","Country","Temperature","Metric","Value","c","addFavorite","WeatherText","DAYS_OF_WEEK","Forcast","day","date","Date","getDay","Minimum","Maximum","Forcasts","forcasts","setForcasts","DailyForecasts","d","EpochDate","City","match","selectedCity","cityNameFromRoute","params","name","setDefaultCity","setCityFromRoute","background","Home","FavoriteData","height","width","Favorites","Routes","path","component","App","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","favoritesReducer","action","selectedCityReducer","rootReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62bb97f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t<Link className=\"navbar-brand\" to=\"/\">\r\n\t\t\t\tHerolo Weather\r\n\t\t\t</Link>\r\n\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\tdata-target=\"#navbarNav\"\r\n\t\t\t\taria-controls=\"navbarNav\"\r\n\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"navbar-toggler-icon\" />\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\texact\r\n\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\tclassName=\"nav-link text-white\"\r\n\t\t\t\t\tactiveStyle={{\r\n\t\t\t\t\t\tfontWeight: 'bold'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\texact\r\n\t\t\t\t\tto=\"/favorites\"\r\n\t\t\t\t\tclassName=\"nav-link text-white\"\r\n\t\t\t\t\tactiveStyle={{\r\n\t\t\t\t\t\tfontWeight: 'bold'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default NavBar;\r\n","export const addFavorite = (city) => {\r\n\treturn {\r\n\t\ttype: 'ADD_FAVORITE',\r\n\t\tpayload: {\r\n\t\t\tcity\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeFavorite = (key) => {\r\n\treturn {\r\n\t\ttype: 'REMOVE_FAVORITE',\r\n\t\tpayload: {\r\n\t\t\tkey\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const updateCity = (city) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_CITY',\r\n\t\tpayload: {\r\n\t\t\tcity\r\n\t\t}\r\n\t};\r\n};\r\n","import axios from 'axios';\r\nconst BASE_URL = 'https://dataservice.accuweather.com';\r\nconst API_KEY = 'Aea3uS7CS2qPaptAhcLNOFoL72G9IsPb';\r\n\r\nexport const getSuggestions = (searchText) => {\r\n\treturn axios.get(`${BASE_URL}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${searchText}`, {\r\n\t\theaders: { Accept: 'application/json' }\r\n\t});\r\n};\r\n\r\nexport const getCurrentWeather = (id) => {\r\n\treturn axios.get(`${BASE_URL}/currentconditions/v1/${id}?apikey=${API_KEY}`, {\r\n\t\theaders: { Accept: 'application/json' }\r\n\t});\r\n};\r\n\r\nexport const getForcast = (id) => {\r\n\treturn axios.get(`${BASE_URL}/forecasts/v1/daily/5day/${id}?apikey=${API_KEY}&metric=true`, {\r\n\t\theaders: { Accept: 'application/json' }\r\n\t});\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateCity } from '../store/actions';\r\nimport { getSuggestions } from '../api/WeatherAPI';\r\n\r\nfunction SearchBar() {\r\n\tconst dispatch = useDispatch();\r\n\tconst [ searchText, setSearchText ] = useState('');\r\n\tconst [ hintData, setHintData ] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\treturn await getSuggestions(searchText);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (searchText.length > 0 && /^[A-Za-z -]*$/.test(searchText))\r\n\t\t\t\tgetData().then((res) => setHintData(res.data)).catch((err) => console.log(err));\r\n\t\t},\r\n\t\t[ searchText ]\r\n\t);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSearchText(event.target.value);\r\n\t};\r\n\r\n\tconst handleSelectCity = (city) => {\r\n\t\tdispatch(updateCity(city));\r\n\t\tsetHintData([]);\r\n\t\tsetSearchText('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"w-50 position-relative\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"SearchBar-input w-100 mt-5\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={searchText}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tplaceholder=\"Search for a city name...\"\r\n\t\t\t\ttitle=\"English characters only.\"\r\n\t\t\t/>\r\n\r\n\t\t\t{searchText.length > 0 &&\r\n\t\t\thintData.length > 0 && (\r\n\t\t\t\t<div className=\"position-absolute w-100 bg-white border\" style={{ zIndex: '1' }}>\r\n\t\t\t\t\t{(hintData || []).map((city) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"p-1\"\r\n\t\t\t\t\t\t\tkey={city.Key}\r\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\tonClick={() => handleSelectCity(city)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{city.LocalizedName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBar;\r\n","export const addToLocalStorage = (key, value) => {\r\n\twindow.localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const getFromLocalStorage = (key) => {\r\n\treturn JSON.parse(window.localStorage.getItem(key)) || [];\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addFavorite, removeFavorite } from '../store/actions';\r\nimport { getCurrentWeather } from '../api/WeatherAPI';\r\nimport { useSelector } from 'react-redux';\r\nimport { addToLocalStorage } from '../helpers/dataHelpers';\r\n\r\nfunction CityData({ city }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst favorites = useSelector((state) => state.favorites);\r\n\tconst [ currentWeather, setCurrentWeather ] = useState([]);\r\n\tconst cityKey = city.Key;\r\n\tconst isFavorite = favorites && favorites.filter((f) => f.Key === cityKey).length > 0;\r\n\r\n\tconst getData = async () => {\r\n\t\treturn await getCurrentWeather(cityKey);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cityKey) getData().then((res) => setCurrentWeather(res.data[0])).catch((err) => alert(err));\r\n\t\t},\r\n\t\t[ cityKey ]\r\n\t);\r\n\r\n\tif (!cityKey || currentWeather.length === 0) return null;\r\n\r\n\tconst handleAddToFavorites = () => {\r\n\t\tdispatch(addFavorite(city));\r\n\t\taddToLocalStorage('favorites', [ ...favorites, city ]);\r\n\t};\r\n\r\n\tconst handleRemoveFromFavorites = () => {\r\n\t\tdispatch(removeFavorite(cityKey));\r\n\t\taddToLocalStorage('favorites', [ ...favorites.filter((c) => c.Key !== cityKey) ]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-column align-items-center p-4 w-100\">\r\n\t\t\t<div className=\"d-flex flex-row justify-content-between w-100\">\r\n\t\t\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t\t\t<h5>{`${city.LocalizedName}, ${city.Country.LocalizedName}`}</h5>\r\n\t\t\t\t\t<span>{currentWeather.Temperature.Metric.Value} &#8451;</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-light\"\r\n\t\t\t\t\t\tonClick={isFavorite ? handleRemoveFromFavorites : handleAddToFavorites}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isFavorite ? 'Remove from favorites' : 'Add to favorites'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{isFavorite ? <i className=\"fas fa-heart fa-lg p-2\" /> : <i className=\"far fa-heart fa-lg p-2\" />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<h3>{currentWeather.WeatherText}</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CityData;\r\n","import React from 'react';\r\nconst DAYS_OF_WEEK = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ];\r\n\r\nfunction Forcast({ day }) {\r\n\tconst date = new Date(day.Date);\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-column align-items-center card p-4 mt-2\">\r\n\t\t\t<h5>{DAYS_OF_WEEK[date.getDay()]}</h5>\r\n\t\t\t<span>Lo: {day.Temperature.Minimum.Value} &#8451;</span>\r\n\t\t\t<span>Hi: {day.Temperature.Maximum.Value} &#8451;</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Forcast;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getForcast } from '../api/WeatherAPI';\r\nimport Forcast from './Forcast';\r\n\r\nfunction Forcasts({ cityKey }) {\r\n\tconst [ forcasts, setForcasts ] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\treturn await getForcast(cityKey);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cityKey) getData().then((res) => setForcasts(res.data)).catch((err) => alert(err));\r\n\t\t},\r\n\t\t[ cityKey ]\r\n\t);\r\n\r\n\tif (!cityKey || forcasts.length === 0) return null;\r\n\r\n\treturn (\r\n\t\t<div className=\"ForcastsContainer d-flex flex-row justify-content-between flex-wrap p-4 w-100\">\r\n\t\t\t{forcasts.DailyForecasts.map((d) => <Forcast key={d.EpochDate} day={d} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Forcasts;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getSuggestions } from '../api/WeatherAPI';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateCity } from '../store/actions';\r\nimport CityData from './CityData';\r\nimport Forcasts from './Forcasts';\r\nconst DEFAULT_CITY_NAME = 'tel aviv';\r\n\r\nfunction City({ match }) {\r\n\tconst dispatch = useDispatch();\r\n\tconst city = useSelector((state) => state.selectedCity);\r\n\tconst cityKey = city.Key;\r\n\tconst cityNameFromRoute = match.params.name;\r\n\r\n\tconst setDefaultCity = async () => {\r\n\t\treturn await getSuggestions(DEFAULT_CITY_NAME);\r\n\t};\r\n\r\n\tconst setCityFromRoute = async () => {\r\n\t\treturn await getSuggestions(cityNameFromRoute);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!cityKey) {\r\n\t\t\t\tsetDefaultCity().then((res) => dispatch(updateCity(res.data[0]))).catch((err) => alert(err));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ cityKey ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cityNameFromRoute) {\r\n\t\t\t\tsetCityFromRoute().then((res) => dispatch(updateCity(res.data[0]))).catch((err) => alert(err));\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ cityNameFromRoute ]\r\n\t);\r\n\r\n\tif (city.length === 0 && !cityKey) return null;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"d-flex flex-column align-items-center p-4 mt-5 w-100 card\"\r\n\t\t\tstyle={{ background: 'rgba(100, 100, 100, 0.1)' }}\r\n\t\t>\r\n\t\t\t<CityData city={city} />\r\n\t\t\t<Forcasts cityKey={cityKey} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport City from '../components/City';\r\n\r\nfunction Home({ match }) {\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-column align-items-center\">\r\n\t\t\t<SearchBar />\r\n\t\t\t<City match={match} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getCurrentWeather } from '../api/WeatherAPI';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction FavoriteData({ city }) {\r\n\tconst cityKey = city.Key;\r\n\tconst [ currentWeather, setCurrentWeather ] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\treturn await getCurrentWeather(cityKey);\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (cityKey) getData().then((res) => setCurrentWeather(res.data[0])).catch((err) => alert(err));\r\n\t\t},\r\n\t\t[ cityKey ]\r\n\t);\r\n\r\n\tif (!cityKey || currentWeather.length === 0) return null;\r\n\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tclassName=\"d-flex flex-column align-items-center card p-4 mt-4 mr-4 justify-content-between text-decoration-none text-reset text-center\"\r\n\t\t\tstyle={{ height: '200px', width: '200px' }}\r\n\t\t\tto={`/city/${city.LocalizedName}`}\r\n\t\t>\r\n\t\t\t<div className=\"d-flex flex-column align-items-center\">\r\n\t\t\t\t<h5>{city.LocalizedName}</h5>\r\n\t\t\t\t<span>{currentWeather.Temperature.Metric.Value} &#8451;</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h4>{currentWeather.WeatherText}</h4>\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default FavoriteData;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport FavoriteData from '../components/FavoriteData';\r\n\r\nfunction Favorites() {\r\n\tconst favorites = useSelector((state) => state.favorites);\r\n\r\n\treturn (\r\n\t\t<div className=\"FavoritesContainer d-flex flex-row flex-wrap p-4 w-100\">\r\n\t\t\t{favorites.map((city) => <FavoriteData key={city.Key} city={city} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Favorites;\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport Favorites from '../pages/Favorites';\r\n\r\nfunction Routes() {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t<Route exact path=\"/city/:name\" component={Home} />\r\n\t\t\t\t<Route exact path=\"/favorites\" component={Favorites} />\r\n\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Routes;\r\n","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\nimport Routes from './components/Routes';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<NavBar />\n\t\t\t<Routes />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getFromLocalStorage } from '../../helpers/dataHelpers';\r\n\r\nconst favoritesReducer = (state = getFromLocalStorage('favorites'), action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_FAVORITE':\r\n\t\t\treturn [ ...state, action.payload.city ];\r\n\t\tcase 'REMOVE_FAVORITE':\r\n\t\t\treturn [ ...state.filter((f) => f.Key !== action.payload.key) ];\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default favoritesReducer;\r\n","const selectedCityReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE_CITY':\r\n\t\t\treturn action.payload.city;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default selectedCityReducer;\r\n","import favoritesReducer from './favorites';\r\nimport selectedCityReducer from './selectedCity';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducers = combineReducers({\r\n\tfavorites: favoritesReducer,\r\n\tselectedCity: selectedCityReducer\r\n});\r\n\r\nexport default rootReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport rootReducers from './store/reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<React.StrictMode>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</React.StrictMode>\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}